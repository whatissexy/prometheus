version: '3.8'

networks:
 pk_network:
  driver: bridge
  driver_opts:
   com.docker.network.bridge.enable_icc: "true"
   com.docker.network.driver.mtu: "1500"

volumes:
 prometheus_data: {}
 grafana_data: {}

services:
 prometheus:
  image: prom/prometheus
  container_name: pk_prometheus
  volumes:
   - ./prometheus/:/etc/prometheus/
   - prometheus_data:/prometheus
  command:
   - '--config.file=/etc/prometheus/prometheus.yml'
   - '--storage.tsdb.path=/prometheus'
  restart: unless-stopped
  ports:
   - 9090:9090
  networks:
   - pk_network
  labels:
   org.label-schema.group: "monitoring for PK containers"
 
 nodeexporter:
  image: prom/node-exporter
  container_name: pk_nodeexporter
  restart: unless-stopped
  expose:
   - 9100
  networks:
  - pk_network
  labels:
   org.label-schema.group: "monitoring for PK containers"
 
 cadvisor:
  image: gcr.io/cadvisor/cadvisor
  container_name: pk_cadvisor
  volumes:
   - /:/rootfs:ro
   - /var/run:/var/run:rw
   - /sys:/sys:ro
#   - /var/lib/docker/:/var/lib/docker:ro
  restart: unless-stopped
  expose:
   - 8080
  networks:
   - pk_network
  labels:
   org.label-schema.group: "monitoring for PK containers"

 grafana:
  image: grafana/grafana
  container_name: grafana
  volumes:
  - grafana_data:/var/lib/grafana
  env_file:
  - user.config
  restart: unless-stopped
  expose:
   - 3000
  ports:
   - 3000:3000
  networks:
   - pk_network
  labels:
   org.label-schema.group: "monitoring for PK containers"
   
 alertmanager:
  image: prom/alertmanager
  container_name: pk_alertmanager
  volumes:
   - ./alertmanager/:/etc/alertmanager/
  command:
   - '--config.file=/etc/alertmanager/config.yml'
   - '--storage.path=/alertmanager'
  restart: unless-stopped
  expose:
   - 9093
  ports:
   - 9093:9093
  networks:
   - pk_network
  labels:
   org.label-schema.group: "monitoring for PK containers"